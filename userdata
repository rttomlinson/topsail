#!/bin/bash
yum clean all

yum -y install yq jq curl gcc make perl libc-dev perl-dev unzip \
    && curl -L https://cpanmin.us | perl - --no-wget App::cpanminus

yum -y remove awscli
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
./aws/install --update

yum -y install git

yum install docker -y
systemctl enable docker
service docker start
usermod -a -G docker ec2-user

# make sure /tmp exists and is accessible to everyone?

# create the runner user
# create the cron to execute as the runner user
# runner user gets tmp dir set from

yum -y install amazon-cloudwatch-agent
# doesn't seem like we need to "start" it
# default run as root
# we might need to configure for instance and container metrics but logging seems to be working

# mkdir -p /opt/aws/amazon-cloudwatch-agent/etc
# touch /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json

# opt/aws/amazon-cloudwatch-agent/bin/config.json

# configure the cloudwatch agent via file

# /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json



# use placeholder log4perl.cfg
cat >/root/log4perl.cfg <<'EOT'
log4perl.logger.Foo=DEBUG, Screen

log4perl.appender.Screen=Log::Dispatch::Screen
log4perl.appender.Screen.Threshold=DEBUG
log4perl.appender.Screen.layout=Log::Log4perl::Layout::PatternLayout
log4perl.appender.Screen.layout.ConversionPattern=[%r] %F %L %c - %m%n
EOT

# create a systemd job
# it needs to restart every time it exists
cat >/etc/systemd/system/your-service.service <<'EOD'
[Unit]
Description=topsail

[Service]
Environment="HOST_TEMPDIR=/root/tmp"
Environment="AWSLOGS_GROUP=TopsailLogGroup"
Environment="AWSLOGS_STREAM=bob1"
Environment="AWS_REGION=us-east-1"
Environment="ACTIVITY_ARN=arn:aws:states:us-east-1:904474103895:activity:basic-activity"
User=root
WorkingDirectory=/root
ExecStart=/bin/bash -c '/usr/bin/docker run --rm --init -v "${HOST_TEMPDIR}:${HOST_TEMPDIR}" -v /var/run/docker.sock:/var/run/docker.sock -v /etc/docker:/etc/docker --env HOST_TEMPDIR="${HOST_TEMPDIR}" --log-driver=awslogs --log-opt awslogs-region="${AWS_REGION} --log-opt awslogs-group="${AWSLOGS_GROUP}" --log-opt awslogs-stream="${AWSLOGS_STREAM}" -i rttomlinson/topsail process_activity --activity-arn "${ACTIVITY_ARN}'

Restart=always
RestartSec=3

[Install]
WantedBy=multi-user.target
EOD

systemctl daemon-reload
systemctl start your-service.service
systemctl enable example.service


echo "end userdata"