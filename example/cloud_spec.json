{
    "Comment": "A simple AWS Step Functions state machine.",
    "StartAt": "Validate Cloud Spec",
    "States": {
        "Validate Cloud Spec": {
            "Type": "Task",
            "Resource": "arn:aws:lambda:::function:mast-lambda",
            "Parameters": {
                "step_name": "validate_cloud_spec",
                "cloud_spec_json.$": "$.cloud_spec_json",
                "context": [
                    "prestaging",
                    "standby"
                ],
                "output_file": "/tmp/deployment.json",
            },
            "ResultPath": "$.standby_cloud_spec",
            "Next": "Create ECS Task Definition",
        },
        "Create ECS Task Definition": {
            "Type": "Task",
            "Resource": "arn:aws:lambda:::function:mast-lambda",
            "Parameters": {
                "step_name": "create_ecs_task_definition",
                "cloud_spec_json.$": "$.standby_cloud_spec.cloud_spec_json",
                "output_file": "/tmp/deployment.json",
                "cloud_spec_url": "https://raw.githubusercontent.com/yahooo",
            },
            "ResultPath": "$.ecs_task_definition",
            "Next": "Create ELB Target Groups",
        },
        "Create ELB Target Groups": {
            "Type": "Task",
            "Resource": "arn:aws:lambda:::function:mast-lambda",
            "Parameters": {
                "step_name": "create_elb_target_groups",
                "cloud_spec_json.$": "$.standby_cloud_spec.cloud_spec_json",
            },
            "ResultPath": "$.elb_target_groups",
            "Next": "Update ELB Listener Rules",
        },
        "Update ELB Listener Rules": {
            "Type": "Task",
            "Resource": "arn:aws:lambda:::function:mast-lambda",
            "Parameters": {
                "step_name": "update_elb_listener_rules",
                "cloud_spec_json.$": "$.standby_cloud_spec.cloud_spec_json",
            },
            "ResultPath": "$.elb_listener_rules",
            "Next": "Create ECS Service",
        },
        "Create ECS Service": {
            "Type": "Task",
            "Resource": "arn:aws:lambda:::function:mast-lambda",
            "Parameters": {
                "step_name": "lambda_create_ecs_service",
                "cloud_spec_json.$": "$.standby_cloud_spec.cloud_spec_json",
                "poll_interval": 10,
                "task_definition_arn.$": "$.ecs_task_definition.task_definition_arn",
                "output_file": "/tmp/deployment.json",
            },
            "ResultPath": "$.ecs_service",
            "Next": "Lambda Callback",
        },
        "Lambda Callback": {
            "Type": "Task",
            "Resource": "arn:${AWS::Partition}:states:::lambda:invoke.waitForTaskToken",
            "Parameters": {
                "FunctionName": "arn:aws:lambda:::function:LambdaApprovalFunction",
                "Payload": {
                    "ExecutionContext.$": "$$",
                    "APIGatewayEndpoint": "https://${ExecutionApi}.execute-api.${AWS::Region}.amazonaws.com/states",
                },
            },
            "Next": "ManualApprovalChoiceState",
        },
        "ManualApprovalChoiceState": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.Status",
                    "StringEquals": "Approved! Task approved by ${Email}",
                    "Next": "ApprovedPassState",
                },
                {
                    "Variable": "$.Status",
                    "StringEquals": "Rejected! Task rejected by ${Email}",
                    "Next": "RejectedPassState",
                },
            ],
        },
        "ApprovedPassState": {
            "Type": "Pass",
            "End": true
        },
        "RejectedPassState": {
            "Type": "Pass",
            "End": true
        },
    },
},